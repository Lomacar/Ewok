{"mappings":"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","sources":["src/ewok.js"],"sourcesContent":["const Ewok = {\r\n    dependencies: [],\r\n    classes: {},\r\n    sharedModules: {},\r\n    \r\n    init(options, selection = \"template\"){\r\n        plates = document.querySelectorAll(selection)\r\n        //get a string list of template IDs like \"my-element,custom-picture...\"\r\n        let templates = [...plates].map(x=>x.id).filter(x=>x).join(',')\r\n        //narrow the list down to a Set of the custom elements used on the page\r\n        let used_templates = new Set([...document.querySelectorAll(templates)]\r\n                                     .map(x=>x.tagName.toLowerCase()))\r\n        \r\n\r\n        // Extended Built-in Templates\r\n        // look for templates that extend built-in html elements                                     \r\n        let ext_templates = [...document.querySelectorAll(selection)]\r\n                            .filter(t=>t.hasAttribute('extends'))\r\n                            .map(x=>`[is=${x.id}]`).join(',')\r\n        //...and their corresponding use via is=\"...\"\r\n        if (ext_templates) {\r\n            let used_ext_templates = new Set([...document.querySelectorAll(ext_templates)]\r\n                                         .map(x=>x.getAttribute('is')))            \r\n            //add the extended templates to the regular templates set\r\n            if (used_ext_templates.size) used_templates = new Set([...used_templates,...used_ext_templates])\r\n        }\r\n\r\n        //find subcomponents\r\n        used_templates.forEach((t) => {\r\n            let frag = document.getElementById(t).content\r\n            let subcomponents = new Set([...frag.querySelectorAll(templates)]\r\n                                        .map(x=>x.tagName.toLowerCase()))\r\n            if (subcomponents.size) subcomponents.forEach(sc => {\r\n                Ewok.dependencies.push([sc,t])\r\n                //make sure components that are only inside templates count as used\r\n                used_templates.add(sc)\r\n            })\r\n        })\r\n\r\n        //get a dependency-ordered list of templates/components\r\n        let templateDependencies = new Graph([...used_templates], Ewok.dependencies)\r\n        used_templates = topologicalSort(templateDependencies)\r\n\r\n        //create the classes to make each custom element work\r\n        used_templates.forEach(x=>{createTemplate(x, options)})\r\n    \r\n\r\n\r\n        function createTemplate(elementName, options){\r\n            \r\n            const templateElement = document.getElementById(elementName)\r\n            const templateContent = templateElement.content\r\n            const templateAttrs = new Map ( Object.entries(\r\n                                            [...templateElement.attributes]\r\n                                            .filter(a=>a.name!='id')\r\n                                            .reduce((obj,a)=>{ \r\n                                                obj[a.name] = a.value;\r\n                                                templateElement.removeAttribute(a.name)\r\n                                                return obj\r\n                                            },{})\r\n                                        ))\r\n            \r\n            //prepare script from template\r\n            let promises = []\r\n            let templateScript = templateContent.querySelectorAll('script')\r\n            let sharedModules\r\n            let privateModules\r\n            if (templateScript.length) {\r\n                //let templateScriptText = templateScript.textContent\r\n                sharedModules = [...templateScript].filter(x=>x.hasAttribute('shared'))\r\n                privateModules = [...templateScript].filter(x=>!x.hasAttribute('shared'))\r\n\r\n                sharedModules = sharedModules.reduce((t,m) => { return t+m.text }, '')\r\n                privateModules = privateModules.reduce((t,m) => { return t+m.text }, '')\r\n\r\n                sharedModules && blobify(sharedModules, true)\r\n\r\n                templateScript.forEach(s=>s.remove())\r\n            }\r\n            // for attaching scripts in templates as modules on components\r\n            function blobify(code, shared=false) {\r\n                // a way to make host refer to the component inside the module\r\n                let deviousHook = !shared ? `let host; export function ewokAttachHost(){host = this};\r\n                ` : ''\r\n                let blob = new Blob([deviousHook + code], {type: 'application/javascript'})\r\n                promises[1+shared] =  import(URL.createObjectURL(blob))\r\n                URL.revokeObjectURL(blob)\r\n            }\r\n\r\n\r\n            //console.debug(\"🚩 \"+elementName);\r\n\r\n            //get the type of element to extend, if the 'extends' attribute is set on the template\r\n            const ext = templateAttrs.get('extends')\r\n            let extType\r\n            if (ext) {\r\n                const invalid = ()=>EwokWarn (`${ext} is not a valid element to extend.`)\r\n                try {\r\n                    const extEl = document.createElement(ext)\r\n                    if (extEl.__proto__ == HTMLUnknownElement.prototype){\r\n                        throw 'invalid element type'\r\n                    } else {\r\n                        extType = extEl.__proto__.constructor\r\n                    }\r\n                } catch {\r\n                    invalid()\r\n                    ext = null\r\n                }\r\n            }\r\n\r\n\r\n            // Here is the generic custom element class!\r\n            Ewok.classes[elementName] = class extends (extType || HTMLElement) {\r\n\r\n                constructor() {\r\n                    super();\r\n\r\n                    //console.debug(\"🏗 \"+elementName);\r\n\r\n                    if (!this.hasAttribute('noshadow')) {                        \r\n                        this.attachShadow({mode: 'open'})\r\n                    }           \r\n\r\n                    //Alpine compatibility\r\n                    //TODO: is this actually necessary?\r\n                    if (this.hasAttribute('x-data')) Alpine.initTree(this)\r\n                }\r\n\r\n\r\n            ///////////////////////////////////////////////////////////////////                \r\n\r\n                connectedCallback() {\r\n\r\n                    let event = new Event('connecting', {node: this});\r\n                    this.dispatchEvent(event)\r\n\r\n                    //console.debug(\"⚡ \"+elementName);\r\n\r\n                    this.setAttribute('loading', '')\r\n\r\n                    let attachPoint = this.shadowRoot || this\r\n                    let host = this.parentElement || this.getRootNode().host\r\n                    let nested = host.hasOwnProperty('props')\r\n\r\n                    //copy attributes from template tag onto custom element\r\n                    //unless that attribute is already set\r\n                    for (const a of templateAttrs) {\r\n                        if (!this.hasAttribute(a[0])) {\r\n                            this.setAttribute(a[0], a[1])\r\n                        }\r\n                    }\r\n                    \r\n                    let clone = templateContent.cloneNode(true)\r\n                    \r\n                    // 'temp' (placeholder) elements\r\n                    let temp = clone.querySelector('[temp]')\r\n                        temp = this.querySelector('[temp]') || temp\r\n                        temp && attachPoint.appendChild(temp)\r\n                    \r\n                    // make a convenient reference to the root of the custom el on every sub-element\r\n                    clone.querySelectorAll('*').forEach((el) => {\r\n                        el.host = this\r\n                    })\r\n\r\n                    let THIS = this\r\n                    this.propsReady = new Promise(function(resolve, reject){\r\n                        THIS.resolver = resolve;\r\n\t\t                THIS.rejecter = reject;\r\n                    });\r\n\r\n                    //components must not be processed before their parent's props are ready\r\n                    let parentPromise = nested ? host.propsReady : null\r\n                    promises[0] = parentPromise\r\n                    \r\n                    //transfer js code from template to element\r\n                    if (privateModules) { blobify(privateModules) }\r\n\r\n                /////////////////////////////////////////////////////////////////  \r\n\r\n\r\n                    Promise.all(promises).then((results)=>{\r\n                        \r\n                        let privateModules = results[1]\r\n                        let sharedModules = results[2]\r\n                        let thismodule = { ...sharedModules, ...privateModules}\r\n                        sharedModules && (Ewok.sharedModules[elementName] = sharedModules)\r\n\r\n                        //SET PROPS\r\n                        let hostProps = nested ? host.props : null\r\n                        //convert attributes with $ to the global variables they point to\r\n                        let thisDataset = {...this.dataset}\r\n                        for (let p in thisDataset) {\r\n                            let v = thisDataset[p]\r\n                            if (v[0]=='$') {\r\n                                let sliced = v.slice(1)\r\n                                if (v.includes('.')) thisDataset[p] = getObjPath(sliced, window)\r\n                                else thisDataset[p] = window[sliced]\r\n                            }\r\n                        }\r\n                        this.props = {...hostProps, ...thismodule, ...thisDataset}\r\n\r\n                        //the parent (if applicable), and the module (if applicable) have been resolved\r\n                        //and props have been set, so resolve self\r\n                        this.resolver()\r\n\r\n                        // if component has a module assign 'this' (the component) to the host variable\r\n                        privateModules && privateModules.ewokAttachHost.apply(this)\r\n\r\n                        // interpolate {{variables}} in the template\r\n                        interpolate(clone,this.props)\r\n                        // interpolate any HTML (slots) in the custom element instance\r\n                        if (this.shadowRoot) interpolate(this,this.props)\r\n                        \r\n                        // attach props to every sub-element\r\n                        clone.querySelectorAll('*').forEach((el) => {\r\n                            el.props = this.props\r\n                        })\r\n\r\n                        // for non-hasty elements, now is the time to append the template content\r\n                        // and delete any temp element\r\n                        //!this.hasAttribute('hasty') && \r\n                        injectContent.apply(this)\r\n                        this.removeAttribute('loading')\r\n                        \r\n                        //run the component's mount function, if present\r\n                        if (thismodule && thismodule.mount) thismodule.mount.apply(this, null)\r\n\r\n                        //Alpine compatibility\r\n                        alpinify.apply(this)\r\n\r\n                    })                \r\n                    \r\n                    //console.debug(\"✅ \"+elementName);\r\n\r\n                    event = new Event('connected', {detail: elementName});\r\n                    event.elem = elementName\r\n                    window.dispatchEvent(event)\r\n\r\n                    //// functions //////////////////////////////////////////////////////////////\r\n\r\n                    function interpolate (attachPoint, props){\r\n                        [...attachPoint.children].forEach((x)=>{\r\n                            if (x.nodeName != 'SCRIPT' && !Object.keys(Ewok.classes).includes( x.tagName.toLowerCase() ) ){\r\n                                let html = x.innerHTML\r\n                                if ( html && html.includes('{{') ) x.innerHTML = handlebars(html, props)\r\n                                if ( html && html.includes('{*') ) {\r\n                                    // this ridiculous regex removes single astrixes between curly braces\r\n                                    // i.e {**{xyz}**} becomes {*{xyz}*}\r\n                                    x.innerHTML = x.innerHTML.replace(/(\\{\\**)\\*(\\{)(.*)(\\}\\**)\\*(\\})/g, '$1$2$3$4$5')\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    function injectContent(){\r\n                        // if Ewok options specifies a stylesheet, insert it\r\n                        if (this.shadowRoot && options?.stylesheet) {\r\n                            let stylelink = document.createElement('link')\r\n                                stylelink.setAttribute('rel', 'stylesheet')\r\n                                stylelink.setAttribute('href', options.stylesheet)\r\n                            this.shadowRoot.appendChild(stylelink)\r\n                        }\r\n\r\n                        //attach the main content, from the template\r\n                        attachPoint.appendChild(clone) \r\n                        temp && attachPoint.querySelectorAll('[temp]').forEach(el=>el.remove())\r\n                    }\r\n\r\n                    function alpinify() {\r\n                        if (this.shadowRoot) {\r\n                            if (this.closest('[x-data]')) {\r\n                                Alpine.initTree(this.shadowRoot)\r\n                            }\r\n                        }\r\n                    }\r\n                }//connectedCallback\r\n                            \r\n            } //anonymous class\r\n                    \r\n            customElements.define(elementName, Ewok.classes[elementName], ext && {extends: ext})\r\n            //console.debug(\"🧾 \"+elementName);\r\n            \r\n        } //createTemplate()\r\n\r\n\r\n        \r\n        function handlebars(template, variables, fallback) {\r\n            const regex = /\\{\\{[^{<\"']+}}/g\r\n\r\n            return template.replace(regex, (match) => {\r\n                const path = match.slice(2, -2).split('|');\r\n                return getObjPath( path[0].trim(), variables, path[1] );\r\n            });\r\n        }\r\n\r\n        //get the specified property or nested property of an object\r\n        function getObjPath(path, obj, fallback = '') {\r\n            if (path[0] == '$') {obj=window; path=path.slice(1)}\r\n            //if (path[0] == '\\\\') path=path.slice(1)\r\n\r\n            return path.split('.').reduce((res, key) => {              \r\n                return (typeof res[key]=='function' \r\n                    ? res[key]() \r\n                    : res[key]) || fallback\r\n            }\r\n            , obj);\r\n            \r\n        }\r\n\r\n        \r\n\r\n        //////////////////////////////////////////////\r\n        //stuff for sorting the component dependencies\r\n\r\n        function Graph(nodes,edges) {\r\n            const adjacencyList = this.adjacencyList = new Map();\r\n            const independentNodes = this.independentNodes = new Set(nodes);\r\n\r\n            this.nodes = nodes\r\n                \r\n            this.addNode = function (node) {\r\n                adjacencyList.set(node, new Set())\r\n            }\r\n            this.addEdge = function (dependency,dependent) {\r\n                try {\r\n                    adjacencyList.get(dependency).add(dependent)\r\n                    return true\r\n                } catch (error) {\r\n                    console.warn(\"Invalid edge.\")\r\n                    return false\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes && nodes.length) {\r\n                nodes.forEach(this.addNode)\r\n                if (edges && edges.length) {\r\n                    edges.forEach(edge => {\r\n                        if (this.addEdge(...edge))\r\n                            independentNodes.delete(edge[1])\r\n                    })\r\n                }\r\n            }\r\n\r\n            return this\r\n        }\r\n\r\n        function topologicalSort (graph) {\r\n            const L = []\r\n\r\n            const inDegree = {};\r\n            for (const v of graph.nodes) {\r\n                for (neighbor of graph.adjacencyList.get(v)) {\r\n                    inDegree[neighbor] = inDegree[neighbor] + 1 || 1;\r\n                }\r\n            }\r\n\r\n            let index = 0\r\n            let queue = new Set(graph.independentNodes)\r\n            while (queue.size) {\r\n                let n = queue.values().next().value\r\n                queue.delete(n)\r\n                L.push(n)\r\n                index++\r\n                graph.adjacencyList.get(n).forEach((m)=>{\r\n                    inDegree[m]--\r\n                    if (inDegree[m]===0){\r\n                        queue.add(m)\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (index !== graph.nodes.length) {\r\n                console.warn(\"Dependecy cycle detected.\");\r\n            }\r\n\r\n            return L\r\n        }\r\n\r\n        function EwokWarn (msg) {\r\n            console.warn('🙈 Ewok: '+msg)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n// nifty custom element that imports HTML via iframe\r\n// from https://codepen.io/piccalilli/project/editor/DyVyPG\r\nclass EwokImportContent extends HTMLElement {\r\n    \r\n    constructor () {\r\n        super()\r\n    }\r\n\r\n    get path() {\r\n        return this.getAttribute('src') || '';\r\n    }\r\n    \r\n    get loading() {\r\n        return this.getAttribute('loading') || 'auto';\r\n    }\r\n    \r\n    connectedCallback() {\r\n    this.innerHTML = `\r\n        <iframe src=\"${this.path}\" loading=\"${this.loading}\" hidden></iframe>\r\n    `;\r\n    \r\n    const frame = this.querySelector('iframe');\r\n    \r\n    frame.addEventListener('load', evt => {\r\n        const children = [...frame.contentDocument.children];\r\n        children.forEach(child => frame.before(child)); \r\n        frame.remove();\r\n    });\r\n    }\r\n}\r\n\r\nif ('customElements' in window) {\r\n    customElements.define('ewok-import', EwokImportContent);\r\n}\r\n\r\nwindow.onload = function(){\r\n    Ewok.init()\r\n}"],"names":[],"version":3,"file":"ewok.js.map"}